import java.util.*;

class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int n = nums.length;
        int[] ans = new int[n - k + 1];
        int z = 0;
        Stack<Integer> st = new Stack<>();
        int[] nge = new int[n];
        
        
        for (int i = n - 1; i >= 0; i--) {
            while (!st.isEmpty() && nums[i] >= nums[st.peek()]) {
                st.pop();
            }
            nge[i] = st.isEmpty() ? n : st.peek();
            st.push(i);
        }
        
        int j = 0;
        for (int i = 0; i <= n - k; i++) {
            if (j < i) j = i; 
            while (nge[j] < i + k) {
                j = nge[j]; 
            }
            ans[z++] = nums[j];
        }
        
        return ans;
    }
}
